{"version":3,"sources":["App.js","index.js"],"names":["useStyles","makeStyles","root","minWidth","backgroundColor","padding","borderRadius","margin","bullet","display","transform","title","fontSize","pos","marginBottom","cele","paddingBottom","App","classes","useState","query","setQuery","cal","setCal","url","getData","a","d","Date","Axios","get","getFullYear","getMonth","getDate","result","console","log","data","className","Typography","variant","style","onSubmit","e","preventDefault","type","placeholder","autoComplete","onChange","target","value","Grid","item","sm","Card","CardContent","CardActions","Button","size","date","color","gutterBottom","season","component","season_week","weekday","celebrations","map","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mYAaMA,EAAYC,YAAW,CAC3BC,KAAM,CACJC,SAAU,IACVC,gBAAiB,UACjBC,QAAQ,GACRC,aAAa,OACdC,OAAO,QAERC,OAAQ,CACNC,QAAS,eACTF,OAAQ,QACRG,UAAW,cAEbC,MAAO,CACLC,SAAU,IAEZC,IAAK,CACHC,aAAc,IAEhBC,KAAK,CACHC,cAAc,MACdZ,gBAAgB,UAChBE,aAAa,UAmFFW,EA9EL,WACR,IAAMC,EAAUlB,IADH,EAGWmB,mBAAS,IAHpB,mBAGPC,EAHO,KAGDC,EAHC,OAIOF,mBAAS,MAJhB,mBAIPG,EAJO,KAIHC,EAJG,KAMPC,EAAI,6DAMLC,EAAO,uCAAG,8BAAAC,EAAA,6DACTC,EAAG,IAAIC,KAAKR,GADH,SAEOS,IAAMC,IAAIN,EAAIG,EAAEI,cAAc,IAAIJ,EAAEK,WAAW,IAAIL,EAAEM,WAF5D,OAERC,EAFQ,OAGdC,QAAQC,IAAIZ,EAAIG,EAAEI,cAAc,IAAIJ,EAAEK,WAAW,IAAIL,EAAEM,WACvDE,QAAQC,IAAIF,GACZX,EAAOW,EAAOG,MACdhB,EAAS,IANK,2CAAH,qDAmBZ,OACE,sBAAKiB,UAAU,MAAf,UACC,eAACC,EAAA,EAAD,CAAYC,QAAQ,KAApB,UAAyB,cAAC,IAAD,CAAWC,MAAO,CAAE7B,SAAU,MAAvD,eACA,uBAAM0B,UAAU,cAAcI,SARjB,SAAAC,GAChBA,EAAEC,iBACFnB,KAMG,UACE,uBAAOoB,KAAK,OAAOC,YAAY,SAC/BC,aAAa,MACZC,SAhBa,SAACL,GACpBtB,EAASsB,EAAEM,OAAOC,OAClBf,QAAQC,IAAIhB,IAeN8B,MAAO9B,IAEP,uBAAOyB,KAAK,SAASK,MAAM,cAG/B5B,EACD,eAAC6B,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAf,UACI,cAACC,EAAA,EAAD,CAAMhB,UAAWpB,EAAQhB,KAAMsC,QAAQ,WAAvC,SACD,eAACe,EAAA,EAAD,WACA,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAQC,KAAK,QAAQlB,QAAQ,YAA7B,SAAyC,6BAAKlB,EAAIqC,WAElD,eAACpB,EAAA,EAAD,CAAYC,QAAQ,KAAKF,UAAWpB,EAAQP,MAAOiD,MAAM,gBAAgBC,cAAY,EAArF,UACA,cAAC,IAAD,IADA,KACiB,wCADjB,IACiCvC,EAAIwC,UAErC,eAACvB,EAAA,EAAD,CAAYC,QAAQ,KAAKoB,MAAM,gBAAgBG,UAAU,KAAzD,UACC,cAAC,IAAD,IADD,WAC2BzC,EAAI0C,YAD/B,QAGA,eAACzB,EAAA,EAAD,CAAYC,QAAQ,KAAKF,UAAWpB,EAAQL,IAAK+C,MAAM,gBAAvD,UACA,cAAC,IAAD,IADA,aACwBtC,EAAI2C,gBAKhC,cAACX,EAAA,EAAD,CAAMhB,UAAWpB,EAAQhB,KAAzB,SACA,eAACqD,EAAA,EAAD,WACA,cAAChB,EAAA,EAAD,CAAYC,QAAQ,KAAKF,UAAWpB,EAAQH,KAAMgD,UAAU,IAA5D,wCAGA,cAACxB,EAAA,EAAD,CAAYC,QAAQ,KAAKF,UAAWpB,EAAQhB,KAAM6D,UAAU,IAA5D,SACGzC,EAAI4C,aAAaC,KAAI,SAAAxB,GAAC,OAAE,oCAAOA,EAAEhC,sBAKnC,OC5GLyD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c1f571ad.chunk.js","sourcesContent":["import React, {useState} from 'react'\nimport {Typography,Button,Grid} from '@material-ui/core'\nimport './App.css';\nimport Axios from 'axios'\nimport EventIcon from '@material-ui/icons/Event';\nimport { makeStyles} from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport WbSunnyIcon from '@material-ui/icons/WbSunny';\nimport WatchLaterIcon from '@material-ui/icons/WatchLater';\nimport TodayIcon from '@material-ui/icons/Today';\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 375,\n    backgroundColor: \"#ADD8E6\",\n    padding:13,\n    borderRadius:'15px',\n   margin:'.5em'\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 27,\n  },\n  pos: {\n    marginBottom: 13,\n  },\n  cele:{\n    paddingBottom:'5px',\n    backgroundColor:\"#F0FFFF\",\n    borderRadius:'13px'\n  }\n});\n\n\nconst App=()=> {\n  const classes = useStyles();\n\n  const[query,setQuery] = useState(\"\");\n  const[cal,setCal] = useState(null);\n\n  const url=`http://calapi.inadiutorium.cz/api/v0/en/calendars/default/`\n\n\n  \n\n\n const getData = async()=>{\n  const d= new Date(query)\n   const result = await Axios.get(url+d.getFullYear()+\"/\"+d.getMonth()+\"/\"+d.getDate());\n   console.log(url+d.getFullYear()+\"/\"+d.getMonth()+\"/\"+d.getDate())\n   console.log(result)\n   setCal(result.data)\n   setQuery(\"\")\n \n } \n const handleChange =(e)=>{\n  setQuery(e.target.value)\n  console.log(query)\n}\n\n const onSubmit = e =>{\n  e.preventDefault();\n  getData();\n}\n\n  return (\n    <div className=\"App\">\n     <Typography variant=\"h1\"><EventIcon style={{ fontSize: 40}} /> calendar</Typography>\n     <form className='search-form' onSubmit={onSubmit}>\n       <input type='date' placeholder='search' \n       autoComplete=\"off\"\n        onChange={handleChange}\n        value={query}\n        /> \n        <input type='submit' value='search'/>\n       </form>\n\n   {cal?\n   <Grid item sm={6}>\n       <Card className={classes.root} variant=\"outlined\">\n      <CardContent>\n      <CardActions>\n        <Button size=\"large\" variant=\"contained\"><h3>{cal.date}</h3></Button>\n      </CardActions>\n        <Typography variant=\"h3\" className={classes.title} color=\"textSecondary\" gutterBottom>\n        <WbSunnyIcon />  <u>Season:</u> {cal.season}\n        </Typography>\n        <Typography variant=\"h3\" color=\"textSecondary\" component=\"h2\">\n         <WatchLaterIcon/> Week:  {cal.season_week}th\n        </Typography>\n        <Typography variant=\"h3\" className={classes.pos} color=\"textSecondary\">\n        <TodayIcon /> weekday: {cal.weekday}\n        </Typography>\n      </CardContent>\n    </Card>\n\n    <Card className={classes.root}>\n    <CardContent>\n    <Typography variant=\"h3\" className={classes.cele} component=\"p\">\n    Celebrations & Speciality:  \n     </Typography>\n    <Typography variant=\"h5\" className={classes.root} component=\"p\">\n      {cal.celebrations.map(e=><h3>* {e.title}</h3>)}\n        </Typography>\n        </CardContent>\n    </Card>\n    </Grid>\n    :\"\"\n   }\n    </div>\n  );\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}